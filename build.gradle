plugins
{
	id "eclipse"
	id "idea"
	id "net.neoforged.gradle.userdev" version "7.0.145"
}

version = mod_version
group = mod_group_id

repositories { mavenLocal() }
base
{
	archivesName = "${mod_jar_name}-NEOFORGE-${minecraft_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

runs
{
	configureEach
	{
		systemProperty "forge.logging.markers", "REGISTRIES"
		systemProperty "forge.logging.console.level", "debug"
		modSource project.sourceSets.main
	}

	client { systemProperty "forge.enabledGameTestNamespaces", mod_id }
	server { systemProperty "forge.enabledGameTestNamespaces", mod_id }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies
{
	implementation "net.neoforged:neoforge:${neoforge_version}"
}

tasks.named("processResources", ProcessResources).configure
{
	var replaceProperties =
	[
		minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
		neoforge_version: neoforge_version, neoforge_version_range: neoforge_version_range,
		loader_version_range: loader_version_range,
		mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
		mod_authors: mod_authors, mod_description: mod_description,
		mod_url: mod_url, mod_issues: mod_issues
	]
	inputs.properties replaceProperties

	filesMatching(["META-INF/neoforge.mods.toml"]) { expand replaceProperties }
}

tasks.withType(JavaCompile).configureEach { options.encoding = "UTF-8" }

idea
{
	module
	{
		downloadSources = true
		downloadJavadoc = true
	}
}